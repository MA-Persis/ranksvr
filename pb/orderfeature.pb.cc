// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orderfeature.proto

#include "orderfeature.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace orderfeature {
class OrderInfoFeatureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OrderInfoFeature> _instance;
} _OrderInfoFeature_default_instance_;
}  // namespace orderfeature
static void InitDefaultsscc_info_OrderInfoFeature_orderfeature_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::orderfeature::_OrderInfoFeature_default_instance_;
    new (ptr) ::orderfeature::OrderInfoFeature();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orderfeature::OrderInfoFeature::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OrderInfoFeature_orderfeature_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OrderInfoFeature_orderfeature_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_orderfeature_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_orderfeature_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_orderfeature_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_orderfeature_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, click_custids_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, click_ocpcids_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, click_channels_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, order_custids_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, order_ocpcids_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, order_channels_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, day60_click_order_cross_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, day30_click_order_cross_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, day7_click_order_cross_),
  PROTOBUF_FIELD_OFFSET(::orderfeature::OrderInfoFeature, day1_click_order_cross_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::orderfeature::OrderInfoFeature)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::orderfeature::_OrderInfoFeature_default_instance_),
};

const char descriptor_table_protodef_orderfeature_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022orderfeature.proto\022\014orderfeature\"\240\002\n\020O"
  "rderInfoFeature\022\025\n\rclick_custIds\030\001 \001(\t\022\025"
  "\n\rclick_ocpcIds\030\002 \001(\t\022\026\n\016click_channels\030"
  "\003 \001(\t\022\025\n\rorder_custIds\030\004 \001(\t\022\025\n\rorder_oc"
  "pcIds\030\005 \001(\t\022\026\n\016order_channels\030\006 \001(\t\022\037\n\027d"
  "ay60_click_order_cross\030\007 \001(\t\022\037\n\027day30_cl"
  "ick_order_cross\030\010 \001(\t\022\036\n\026day7_click_orde"
  "r_cross\030\t \001(\t\022\036\n\026day1_click_order_cross\030"
  "\n \001(\t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_orderfeature_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_orderfeature_2eproto_sccs[1] = {
  &scc_info_OrderInfoFeature_orderfeature_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_orderfeature_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_orderfeature_2eproto = {
  false, false, descriptor_table_protodef_orderfeature_2eproto, "orderfeature.proto", 325,
  &descriptor_table_orderfeature_2eproto_once, descriptor_table_orderfeature_2eproto_sccs, descriptor_table_orderfeature_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_orderfeature_2eproto::offsets,
  file_level_metadata_orderfeature_2eproto, 1, file_level_enum_descriptors_orderfeature_2eproto, file_level_service_descriptors_orderfeature_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_orderfeature_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_orderfeature_2eproto)), true);
namespace orderfeature {

// ===================================================================

void OrderInfoFeature::InitAsDefaultInstance() {
}
class OrderInfoFeature::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderInfoFeature>()._has_bits_);
  static void set_has_click_custids(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_click_ocpcids(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_click_channels(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_order_custids(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_order_ocpcids(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_order_channels(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_day60_click_order_cross(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_day30_click_order_cross(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_day7_click_order_cross(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_day1_click_order_cross(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

OrderInfoFeature::OrderInfoFeature(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:orderfeature.OrderInfoFeature)
}
OrderInfoFeature::OrderInfoFeature(const OrderInfoFeature& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  click_custids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_click_custids()) {
    click_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_click_custids(),
      GetArena());
  }
  click_ocpcids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_click_ocpcids()) {
    click_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_click_ocpcids(),
      GetArena());
  }
  click_channels_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_click_channels()) {
    click_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_click_channels(),
      GetArena());
  }
  order_custids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_order_custids()) {
    order_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_order_custids(),
      GetArena());
  }
  order_ocpcids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_order_ocpcids()) {
    order_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_order_ocpcids(),
      GetArena());
  }
  order_channels_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_order_channels()) {
    order_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_order_channels(),
      GetArena());
  }
  day60_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_day60_click_order_cross()) {
    day60_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_day60_click_order_cross(),
      GetArena());
  }
  day30_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_day30_click_order_cross()) {
    day30_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_day30_click_order_cross(),
      GetArena());
  }
  day7_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_day7_click_order_cross()) {
    day7_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_day7_click_order_cross(),
      GetArena());
  }
  day1_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_day1_click_order_cross()) {
    day1_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_day1_click_order_cross(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:orderfeature.OrderInfoFeature)
}

void OrderInfoFeature::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OrderInfoFeature_orderfeature_2eproto.base);
  click_custids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  click_ocpcids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  click_channels_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_custids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_ocpcids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_channels_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day60_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day30_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day7_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day1_click_order_cross_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OrderInfoFeature::~OrderInfoFeature() {
  // @@protoc_insertion_point(destructor:orderfeature.OrderInfoFeature)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OrderInfoFeature::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  click_custids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  click_ocpcids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  click_channels_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_custids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_ocpcids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_channels_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day60_click_order_cross_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day30_click_order_cross_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day7_click_order_cross_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  day1_click_order_cross_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OrderInfoFeature::ArenaDtor(void* object) {
  OrderInfoFeature* _this = reinterpret_cast< OrderInfoFeature* >(object);
  (void)_this;
}
void OrderInfoFeature::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrderInfoFeature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OrderInfoFeature& OrderInfoFeature::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OrderInfoFeature_orderfeature_2eproto.base);
  return *internal_default_instance();
}


void OrderInfoFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:orderfeature.OrderInfoFeature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      click_custids_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      click_ocpcids_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      click_channels_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      order_custids_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      order_ocpcids_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      order_channels_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      day60_click_order_cross_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      day30_click_order_cross_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      day7_click_order_cross_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000200u) {
      day1_click_order_cross_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderInfoFeature::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string click_custIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_click_custids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.click_custIds");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string click_ocpcIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_click_ocpcids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.click_ocpcIds");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string click_channels = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_click_channels();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.click_channels");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string order_custIds = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_order_custids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.order_custIds");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string order_ocpcIds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_order_ocpcids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.order_ocpcIds");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string order_channels = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_order_channels();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.order_channels");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string day60_click_order_cross = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_day60_click_order_cross();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.day60_click_order_cross");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string day30_click_order_cross = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_day30_click_order_cross();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.day30_click_order_cross");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string day7_click_order_cross = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_day7_click_order_cross();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.day7_click_order_cross");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string day1_click_order_cross = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_day1_click_order_cross();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "orderfeature.OrderInfoFeature.day1_click_order_cross");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OrderInfoFeature::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:orderfeature.OrderInfoFeature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string click_custIds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_click_custids().data(), static_cast<int>(this->_internal_click_custids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.click_custIds");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_click_custids(), target);
  }

  // optional string click_ocpcIds = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_click_ocpcids().data(), static_cast<int>(this->_internal_click_ocpcids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.click_ocpcIds");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_click_ocpcids(), target);
  }

  // optional string click_channels = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_click_channels().data(), static_cast<int>(this->_internal_click_channels().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.click_channels");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_click_channels(), target);
  }

  // optional string order_custIds = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_order_custids().data(), static_cast<int>(this->_internal_order_custids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.order_custIds");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_order_custids(), target);
  }

  // optional string order_ocpcIds = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_order_ocpcids().data(), static_cast<int>(this->_internal_order_ocpcids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.order_ocpcIds");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_order_ocpcids(), target);
  }

  // optional string order_channels = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_order_channels().data(), static_cast<int>(this->_internal_order_channels().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.order_channels");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_order_channels(), target);
  }

  // optional string day60_click_order_cross = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_day60_click_order_cross().data(), static_cast<int>(this->_internal_day60_click_order_cross().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.day60_click_order_cross");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_day60_click_order_cross(), target);
  }

  // optional string day30_click_order_cross = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_day30_click_order_cross().data(), static_cast<int>(this->_internal_day30_click_order_cross().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.day30_click_order_cross");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_day30_click_order_cross(), target);
  }

  // optional string day7_click_order_cross = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_day7_click_order_cross().data(), static_cast<int>(this->_internal_day7_click_order_cross().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.day7_click_order_cross");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_day7_click_order_cross(), target);
  }

  // optional string day1_click_order_cross = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_day1_click_order_cross().data(), static_cast<int>(this->_internal_day1_click_order_cross().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "orderfeature.OrderInfoFeature.day1_click_order_cross");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_day1_click_order_cross(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orderfeature.OrderInfoFeature)
  return target;
}

size_t OrderInfoFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orderfeature.OrderInfoFeature)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string click_custIds = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_click_custids());
    }

    // optional string click_ocpcIds = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_click_ocpcids());
    }

    // optional string click_channels = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_click_channels());
    }

    // optional string order_custIds = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_order_custids());
    }

    // optional string order_ocpcIds = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_order_ocpcids());
    }

    // optional string order_channels = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_order_channels());
    }

    // optional string day60_click_order_cross = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_day60_click_order_cross());
    }

    // optional string day30_click_order_cross = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_day30_click_order_cross());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional string day7_click_order_cross = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_day7_click_order_cross());
    }

    // optional string day1_click_order_cross = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_day1_click_order_cross());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderInfoFeature::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orderfeature.OrderInfoFeature)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderInfoFeature* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OrderInfoFeature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orderfeature.OrderInfoFeature)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orderfeature.OrderInfoFeature)
    MergeFrom(*source);
  }
}

void OrderInfoFeature::MergeFrom(const OrderInfoFeature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orderfeature.OrderInfoFeature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_click_custids(from._internal_click_custids());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_click_ocpcids(from._internal_click_ocpcids());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_click_channels(from._internal_click_channels());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_order_custids(from._internal_order_custids());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_order_ocpcids(from._internal_order_ocpcids());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_order_channels(from._internal_order_channels());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_day60_click_order_cross(from._internal_day60_click_order_cross());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_set_day30_click_order_cross(from._internal_day30_click_order_cross());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_set_day7_click_order_cross(from._internal_day7_click_order_cross());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_set_day1_click_order_cross(from._internal_day1_click_order_cross());
    }
  }
}

void OrderInfoFeature::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orderfeature.OrderInfoFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderInfoFeature::CopyFrom(const OrderInfoFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orderfeature.OrderInfoFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfoFeature::IsInitialized() const {
  return true;
}

void OrderInfoFeature::InternalSwap(OrderInfoFeature* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  click_custids_.Swap(&other->click_custids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  click_ocpcids_.Swap(&other->click_ocpcids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  click_channels_.Swap(&other->click_channels_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  order_custids_.Swap(&other->order_custids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  order_ocpcids_.Swap(&other->order_ocpcids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  order_channels_.Swap(&other->order_channels_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  day60_click_order_cross_.Swap(&other->day60_click_order_cross_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  day30_click_order_cross_.Swap(&other->day30_click_order_cross_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  day7_click_order_cross_.Swap(&other->day7_click_order_cross_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  day1_click_order_cross_.Swap(&other->day1_click_order_cross_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderInfoFeature::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace orderfeature
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::orderfeature::OrderInfoFeature* Arena::CreateMaybeMessage< ::orderfeature::OrderInfoFeature >(Arena* arena) {
  return Arena::CreateMessageInternal< ::orderfeature::OrderInfoFeature >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
