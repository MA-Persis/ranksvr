// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orderfeature.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_orderfeature_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_orderfeature_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_orderfeature_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_orderfeature_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_orderfeature_2eproto;
namespace orderfeature {
class OrderInfoFeature;
class OrderInfoFeatureDefaultTypeInternal;
extern OrderInfoFeatureDefaultTypeInternal _OrderInfoFeature_default_instance_;
}  // namespace orderfeature
PROTOBUF_NAMESPACE_OPEN
template<> ::orderfeature::OrderInfoFeature* Arena::CreateMaybeMessage<::orderfeature::OrderInfoFeature>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace orderfeature {

// ===================================================================

class OrderInfoFeature PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:orderfeature.OrderInfoFeature) */ {
 public:
  inline OrderInfoFeature() : OrderInfoFeature(nullptr) {};
  virtual ~OrderInfoFeature();

  OrderInfoFeature(const OrderInfoFeature& from);
  OrderInfoFeature(OrderInfoFeature&& from) noexcept
    : OrderInfoFeature() {
    *this = ::std::move(from);
  }

  inline OrderInfoFeature& operator=(const OrderInfoFeature& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderInfoFeature& operator=(OrderInfoFeature&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OrderInfoFeature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderInfoFeature* internal_default_instance() {
    return reinterpret_cast<const OrderInfoFeature*>(
               &_OrderInfoFeature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OrderInfoFeature& a, OrderInfoFeature& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderInfoFeature* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderInfoFeature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OrderInfoFeature* New() const final {
    return CreateMaybeMessage<OrderInfoFeature>(nullptr);
  }

  OrderInfoFeature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OrderInfoFeature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OrderInfoFeature& from);
  void MergeFrom(const OrderInfoFeature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderInfoFeature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "orderfeature.OrderInfoFeature";
  }
  protected:
  explicit OrderInfoFeature(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_orderfeature_2eproto);
    return ::descriptor_table_orderfeature_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClickCustIdsFieldNumber = 1,
    kClickOcpcIdsFieldNumber = 2,
    kClickChannelsFieldNumber = 3,
    kOrderCustIdsFieldNumber = 4,
    kOrderOcpcIdsFieldNumber = 5,
    kOrderChannelsFieldNumber = 6,
    kDay60ClickOrderCrossFieldNumber = 7,
    kDay30ClickOrderCrossFieldNumber = 8,
    kDay7ClickOrderCrossFieldNumber = 9,
    kDay1ClickOrderCrossFieldNumber = 10,
  };
  // optional string click_custIds = 1;
  bool has_click_custids() const;
  private:
  bool _internal_has_click_custids() const;
  public:
  void clear_click_custids();
  const std::string& click_custids() const;
  void set_click_custids(const std::string& value);
  void set_click_custids(std::string&& value);
  void set_click_custids(const char* value);
  void set_click_custids(const char* value, size_t size);
  std::string* mutable_click_custids();
  std::string* release_click_custids();
  void set_allocated_click_custids(std::string* click_custids);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_click_custids();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_click_custids(
      std::string* click_custids);
  private:
  const std::string& _internal_click_custids() const;
  void _internal_set_click_custids(const std::string& value);
  std::string* _internal_mutable_click_custids();
  public:

  // optional string click_ocpcIds = 2;
  bool has_click_ocpcids() const;
  private:
  bool _internal_has_click_ocpcids() const;
  public:
  void clear_click_ocpcids();
  const std::string& click_ocpcids() const;
  void set_click_ocpcids(const std::string& value);
  void set_click_ocpcids(std::string&& value);
  void set_click_ocpcids(const char* value);
  void set_click_ocpcids(const char* value, size_t size);
  std::string* mutable_click_ocpcids();
  std::string* release_click_ocpcids();
  void set_allocated_click_ocpcids(std::string* click_ocpcids);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_click_ocpcids();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_click_ocpcids(
      std::string* click_ocpcids);
  private:
  const std::string& _internal_click_ocpcids() const;
  void _internal_set_click_ocpcids(const std::string& value);
  std::string* _internal_mutable_click_ocpcids();
  public:

  // optional string click_channels = 3;
  bool has_click_channels() const;
  private:
  bool _internal_has_click_channels() const;
  public:
  void clear_click_channels();
  const std::string& click_channels() const;
  void set_click_channels(const std::string& value);
  void set_click_channels(std::string&& value);
  void set_click_channels(const char* value);
  void set_click_channels(const char* value, size_t size);
  std::string* mutable_click_channels();
  std::string* release_click_channels();
  void set_allocated_click_channels(std::string* click_channels);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_click_channels();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_click_channels(
      std::string* click_channels);
  private:
  const std::string& _internal_click_channels() const;
  void _internal_set_click_channels(const std::string& value);
  std::string* _internal_mutable_click_channels();
  public:

  // optional string order_custIds = 4;
  bool has_order_custids() const;
  private:
  bool _internal_has_order_custids() const;
  public:
  void clear_order_custids();
  const std::string& order_custids() const;
  void set_order_custids(const std::string& value);
  void set_order_custids(std::string&& value);
  void set_order_custids(const char* value);
  void set_order_custids(const char* value, size_t size);
  std::string* mutable_order_custids();
  std::string* release_order_custids();
  void set_allocated_order_custids(std::string* order_custids);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_order_custids();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_custids(
      std::string* order_custids);
  private:
  const std::string& _internal_order_custids() const;
  void _internal_set_order_custids(const std::string& value);
  std::string* _internal_mutable_order_custids();
  public:

  // optional string order_ocpcIds = 5;
  bool has_order_ocpcids() const;
  private:
  bool _internal_has_order_ocpcids() const;
  public:
  void clear_order_ocpcids();
  const std::string& order_ocpcids() const;
  void set_order_ocpcids(const std::string& value);
  void set_order_ocpcids(std::string&& value);
  void set_order_ocpcids(const char* value);
  void set_order_ocpcids(const char* value, size_t size);
  std::string* mutable_order_ocpcids();
  std::string* release_order_ocpcids();
  void set_allocated_order_ocpcids(std::string* order_ocpcids);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_order_ocpcids();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_ocpcids(
      std::string* order_ocpcids);
  private:
  const std::string& _internal_order_ocpcids() const;
  void _internal_set_order_ocpcids(const std::string& value);
  std::string* _internal_mutable_order_ocpcids();
  public:

  // optional string order_channels = 6;
  bool has_order_channels() const;
  private:
  bool _internal_has_order_channels() const;
  public:
  void clear_order_channels();
  const std::string& order_channels() const;
  void set_order_channels(const std::string& value);
  void set_order_channels(std::string&& value);
  void set_order_channels(const char* value);
  void set_order_channels(const char* value, size_t size);
  std::string* mutable_order_channels();
  std::string* release_order_channels();
  void set_allocated_order_channels(std::string* order_channels);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_order_channels();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_channels(
      std::string* order_channels);
  private:
  const std::string& _internal_order_channels() const;
  void _internal_set_order_channels(const std::string& value);
  std::string* _internal_mutable_order_channels();
  public:

  // optional string day60_click_order_cross = 7;
  bool has_day60_click_order_cross() const;
  private:
  bool _internal_has_day60_click_order_cross() const;
  public:
  void clear_day60_click_order_cross();
  const std::string& day60_click_order_cross() const;
  void set_day60_click_order_cross(const std::string& value);
  void set_day60_click_order_cross(std::string&& value);
  void set_day60_click_order_cross(const char* value);
  void set_day60_click_order_cross(const char* value, size_t size);
  std::string* mutable_day60_click_order_cross();
  std::string* release_day60_click_order_cross();
  void set_allocated_day60_click_order_cross(std::string* day60_click_order_cross);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_day60_click_order_cross();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_day60_click_order_cross(
      std::string* day60_click_order_cross);
  private:
  const std::string& _internal_day60_click_order_cross() const;
  void _internal_set_day60_click_order_cross(const std::string& value);
  std::string* _internal_mutable_day60_click_order_cross();
  public:

  // optional string day30_click_order_cross = 8;
  bool has_day30_click_order_cross() const;
  private:
  bool _internal_has_day30_click_order_cross() const;
  public:
  void clear_day30_click_order_cross();
  const std::string& day30_click_order_cross() const;
  void set_day30_click_order_cross(const std::string& value);
  void set_day30_click_order_cross(std::string&& value);
  void set_day30_click_order_cross(const char* value);
  void set_day30_click_order_cross(const char* value, size_t size);
  std::string* mutable_day30_click_order_cross();
  std::string* release_day30_click_order_cross();
  void set_allocated_day30_click_order_cross(std::string* day30_click_order_cross);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_day30_click_order_cross();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_day30_click_order_cross(
      std::string* day30_click_order_cross);
  private:
  const std::string& _internal_day30_click_order_cross() const;
  void _internal_set_day30_click_order_cross(const std::string& value);
  std::string* _internal_mutable_day30_click_order_cross();
  public:

  // optional string day7_click_order_cross = 9;
  bool has_day7_click_order_cross() const;
  private:
  bool _internal_has_day7_click_order_cross() const;
  public:
  void clear_day7_click_order_cross();
  const std::string& day7_click_order_cross() const;
  void set_day7_click_order_cross(const std::string& value);
  void set_day7_click_order_cross(std::string&& value);
  void set_day7_click_order_cross(const char* value);
  void set_day7_click_order_cross(const char* value, size_t size);
  std::string* mutable_day7_click_order_cross();
  std::string* release_day7_click_order_cross();
  void set_allocated_day7_click_order_cross(std::string* day7_click_order_cross);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_day7_click_order_cross();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_day7_click_order_cross(
      std::string* day7_click_order_cross);
  private:
  const std::string& _internal_day7_click_order_cross() const;
  void _internal_set_day7_click_order_cross(const std::string& value);
  std::string* _internal_mutable_day7_click_order_cross();
  public:

  // optional string day1_click_order_cross = 10;
  bool has_day1_click_order_cross() const;
  private:
  bool _internal_has_day1_click_order_cross() const;
  public:
  void clear_day1_click_order_cross();
  const std::string& day1_click_order_cross() const;
  void set_day1_click_order_cross(const std::string& value);
  void set_day1_click_order_cross(std::string&& value);
  void set_day1_click_order_cross(const char* value);
  void set_day1_click_order_cross(const char* value, size_t size);
  std::string* mutable_day1_click_order_cross();
  std::string* release_day1_click_order_cross();
  void set_allocated_day1_click_order_cross(std::string* day1_click_order_cross);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_day1_click_order_cross();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_day1_click_order_cross(
      std::string* day1_click_order_cross);
  private:
  const std::string& _internal_day1_click_order_cross() const;
  void _internal_set_day1_click_order_cross(const std::string& value);
  std::string* _internal_mutable_day1_click_order_cross();
  public:

  // @@protoc_insertion_point(class_scope:orderfeature.OrderInfoFeature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr click_custids_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr click_ocpcids_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr click_channels_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr order_custids_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr order_ocpcids_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr order_channels_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr day60_click_order_cross_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr day30_click_order_cross_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr day7_click_order_cross_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr day1_click_order_cross_;
  friend struct ::TableStruct_orderfeature_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderInfoFeature

// optional string click_custIds = 1;
inline bool OrderInfoFeature::_internal_has_click_custids() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_click_custids() const {
  return _internal_has_click_custids();
}
inline void OrderInfoFeature::clear_click_custids() {
  click_custids_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderInfoFeature::click_custids() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.click_custIds)
  return _internal_click_custids();
}
inline void OrderInfoFeature::set_click_custids(const std::string& value) {
  _internal_set_click_custids(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.click_custIds)
}
inline std::string* OrderInfoFeature::mutable_click_custids() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.click_custIds)
  return _internal_mutable_click_custids();
}
inline const std::string& OrderInfoFeature::_internal_click_custids() const {
  return click_custids_.Get();
}
inline void OrderInfoFeature::_internal_set_click_custids(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  click_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_click_custids(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  click_custids_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.click_custIds)
}
inline void OrderInfoFeature::set_click_custids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  click_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.click_custIds)
}
inline void OrderInfoFeature::set_click_custids(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  click_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.click_custIds)
}
inline std::string* OrderInfoFeature::_internal_mutable_click_custids() {
  _has_bits_[0] |= 0x00000001u;
  return click_custids_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_click_custids() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.click_custIds)
  if (!_internal_has_click_custids()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return click_custids_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_click_custids(std::string* click_custids) {
  if (click_custids != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  click_custids_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), click_custids,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.click_custIds)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_click_custids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.click_custIds)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return click_custids_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_click_custids(
    std::string* click_custids) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (click_custids != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  click_custids_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      click_custids, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.click_custIds)
}

// optional string click_ocpcIds = 2;
inline bool OrderInfoFeature::_internal_has_click_ocpcids() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_click_ocpcids() const {
  return _internal_has_click_ocpcids();
}
inline void OrderInfoFeature::clear_click_ocpcids() {
  click_ocpcids_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderInfoFeature::click_ocpcids() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.click_ocpcIds)
  return _internal_click_ocpcids();
}
inline void OrderInfoFeature::set_click_ocpcids(const std::string& value) {
  _internal_set_click_ocpcids(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.click_ocpcIds)
}
inline std::string* OrderInfoFeature::mutable_click_ocpcids() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.click_ocpcIds)
  return _internal_mutable_click_ocpcids();
}
inline const std::string& OrderInfoFeature::_internal_click_ocpcids() const {
  return click_ocpcids_.Get();
}
inline void OrderInfoFeature::_internal_set_click_ocpcids(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  click_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_click_ocpcids(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  click_ocpcids_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.click_ocpcIds)
}
inline void OrderInfoFeature::set_click_ocpcids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  click_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.click_ocpcIds)
}
inline void OrderInfoFeature::set_click_ocpcids(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  click_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.click_ocpcIds)
}
inline std::string* OrderInfoFeature::_internal_mutable_click_ocpcids() {
  _has_bits_[0] |= 0x00000002u;
  return click_ocpcids_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_click_ocpcids() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.click_ocpcIds)
  if (!_internal_has_click_ocpcids()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return click_ocpcids_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_click_ocpcids(std::string* click_ocpcids) {
  if (click_ocpcids != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  click_ocpcids_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), click_ocpcids,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.click_ocpcIds)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_click_ocpcids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.click_ocpcIds)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return click_ocpcids_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_click_ocpcids(
    std::string* click_ocpcids) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (click_ocpcids != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  click_ocpcids_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      click_ocpcids, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.click_ocpcIds)
}

// optional string click_channels = 3;
inline bool OrderInfoFeature::_internal_has_click_channels() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_click_channels() const {
  return _internal_has_click_channels();
}
inline void OrderInfoFeature::clear_click_channels() {
  click_channels_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrderInfoFeature::click_channels() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.click_channels)
  return _internal_click_channels();
}
inline void OrderInfoFeature::set_click_channels(const std::string& value) {
  _internal_set_click_channels(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.click_channels)
}
inline std::string* OrderInfoFeature::mutable_click_channels() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.click_channels)
  return _internal_mutable_click_channels();
}
inline const std::string& OrderInfoFeature::_internal_click_channels() const {
  return click_channels_.Get();
}
inline void OrderInfoFeature::_internal_set_click_channels(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  click_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_click_channels(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  click_channels_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.click_channels)
}
inline void OrderInfoFeature::set_click_channels(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  click_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.click_channels)
}
inline void OrderInfoFeature::set_click_channels(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  click_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.click_channels)
}
inline std::string* OrderInfoFeature::_internal_mutable_click_channels() {
  _has_bits_[0] |= 0x00000004u;
  return click_channels_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_click_channels() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.click_channels)
  if (!_internal_has_click_channels()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return click_channels_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_click_channels(std::string* click_channels) {
  if (click_channels != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  click_channels_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), click_channels,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.click_channels)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_click_channels() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.click_channels)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return click_channels_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_click_channels(
    std::string* click_channels) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (click_channels != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  click_channels_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      click_channels, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.click_channels)
}

// optional string order_custIds = 4;
inline bool OrderInfoFeature::_internal_has_order_custids() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_order_custids() const {
  return _internal_has_order_custids();
}
inline void OrderInfoFeature::clear_order_custids() {
  order_custids_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OrderInfoFeature::order_custids() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.order_custIds)
  return _internal_order_custids();
}
inline void OrderInfoFeature::set_order_custids(const std::string& value) {
  _internal_set_order_custids(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.order_custIds)
}
inline std::string* OrderInfoFeature::mutable_order_custids() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.order_custIds)
  return _internal_mutable_order_custids();
}
inline const std::string& OrderInfoFeature::_internal_order_custids() const {
  return order_custids_.Get();
}
inline void OrderInfoFeature::_internal_set_order_custids(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  order_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_order_custids(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  order_custids_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.order_custIds)
}
inline void OrderInfoFeature::set_order_custids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  order_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.order_custIds)
}
inline void OrderInfoFeature::set_order_custids(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  order_custids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.order_custIds)
}
inline std::string* OrderInfoFeature::_internal_mutable_order_custids() {
  _has_bits_[0] |= 0x00000008u;
  return order_custids_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_order_custids() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.order_custIds)
  if (!_internal_has_order_custids()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return order_custids_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_order_custids(std::string* order_custids) {
  if (order_custids != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  order_custids_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), order_custids,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.order_custIds)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_order_custids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.order_custIds)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return order_custids_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_order_custids(
    std::string* order_custids) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (order_custids != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  order_custids_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      order_custids, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.order_custIds)
}

// optional string order_ocpcIds = 5;
inline bool OrderInfoFeature::_internal_has_order_ocpcids() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_order_ocpcids() const {
  return _internal_has_order_ocpcids();
}
inline void OrderInfoFeature::clear_order_ocpcids() {
  order_ocpcids_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& OrderInfoFeature::order_ocpcids() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.order_ocpcIds)
  return _internal_order_ocpcids();
}
inline void OrderInfoFeature::set_order_ocpcids(const std::string& value) {
  _internal_set_order_ocpcids(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.order_ocpcIds)
}
inline std::string* OrderInfoFeature::mutable_order_ocpcids() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.order_ocpcIds)
  return _internal_mutable_order_ocpcids();
}
inline const std::string& OrderInfoFeature::_internal_order_ocpcids() const {
  return order_ocpcids_.Get();
}
inline void OrderInfoFeature::_internal_set_order_ocpcids(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  order_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_order_ocpcids(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  order_ocpcids_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.order_ocpcIds)
}
inline void OrderInfoFeature::set_order_ocpcids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  order_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.order_ocpcIds)
}
inline void OrderInfoFeature::set_order_ocpcids(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  order_ocpcids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.order_ocpcIds)
}
inline std::string* OrderInfoFeature::_internal_mutable_order_ocpcids() {
  _has_bits_[0] |= 0x00000010u;
  return order_ocpcids_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_order_ocpcids() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.order_ocpcIds)
  if (!_internal_has_order_ocpcids()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return order_ocpcids_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_order_ocpcids(std::string* order_ocpcids) {
  if (order_ocpcids != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  order_ocpcids_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), order_ocpcids,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.order_ocpcIds)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_order_ocpcids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.order_ocpcIds)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000010u;
  return order_ocpcids_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_order_ocpcids(
    std::string* order_ocpcids) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (order_ocpcids != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  order_ocpcids_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      order_ocpcids, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.order_ocpcIds)
}

// optional string order_channels = 6;
inline bool OrderInfoFeature::_internal_has_order_channels() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_order_channels() const {
  return _internal_has_order_channels();
}
inline void OrderInfoFeature::clear_order_channels() {
  order_channels_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& OrderInfoFeature::order_channels() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.order_channels)
  return _internal_order_channels();
}
inline void OrderInfoFeature::set_order_channels(const std::string& value) {
  _internal_set_order_channels(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.order_channels)
}
inline std::string* OrderInfoFeature::mutable_order_channels() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.order_channels)
  return _internal_mutable_order_channels();
}
inline const std::string& OrderInfoFeature::_internal_order_channels() const {
  return order_channels_.Get();
}
inline void OrderInfoFeature::_internal_set_order_channels(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  order_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_order_channels(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  order_channels_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.order_channels)
}
inline void OrderInfoFeature::set_order_channels(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  order_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.order_channels)
}
inline void OrderInfoFeature::set_order_channels(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  order_channels_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.order_channels)
}
inline std::string* OrderInfoFeature::_internal_mutable_order_channels() {
  _has_bits_[0] |= 0x00000020u;
  return order_channels_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_order_channels() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.order_channels)
  if (!_internal_has_order_channels()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return order_channels_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_order_channels(std::string* order_channels) {
  if (order_channels != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  order_channels_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), order_channels,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.order_channels)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_order_channels() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.order_channels)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000020u;
  return order_channels_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_order_channels(
    std::string* order_channels) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (order_channels != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  order_channels_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      order_channels, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.order_channels)
}

// optional string day60_click_order_cross = 7;
inline bool OrderInfoFeature::_internal_has_day60_click_order_cross() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_day60_click_order_cross() const {
  return _internal_has_day60_click_order_cross();
}
inline void OrderInfoFeature::clear_day60_click_order_cross() {
  day60_click_order_cross_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& OrderInfoFeature::day60_click_order_cross() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.day60_click_order_cross)
  return _internal_day60_click_order_cross();
}
inline void OrderInfoFeature::set_day60_click_order_cross(const std::string& value) {
  _internal_set_day60_click_order_cross(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.day60_click_order_cross)
}
inline std::string* OrderInfoFeature::mutable_day60_click_order_cross() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.day60_click_order_cross)
  return _internal_mutable_day60_click_order_cross();
}
inline const std::string& OrderInfoFeature::_internal_day60_click_order_cross() const {
  return day60_click_order_cross_.Get();
}
inline void OrderInfoFeature::_internal_set_day60_click_order_cross(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  day60_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_day60_click_order_cross(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  day60_click_order_cross_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.day60_click_order_cross)
}
inline void OrderInfoFeature::set_day60_click_order_cross(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  day60_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.day60_click_order_cross)
}
inline void OrderInfoFeature::set_day60_click_order_cross(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000040u;
  day60_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.day60_click_order_cross)
}
inline std::string* OrderInfoFeature::_internal_mutable_day60_click_order_cross() {
  _has_bits_[0] |= 0x00000040u;
  return day60_click_order_cross_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_day60_click_order_cross() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.day60_click_order_cross)
  if (!_internal_has_day60_click_order_cross()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return day60_click_order_cross_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_day60_click_order_cross(std::string* day60_click_order_cross) {
  if (day60_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  day60_click_order_cross_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), day60_click_order_cross,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.day60_click_order_cross)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_day60_click_order_cross() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.day60_click_order_cross)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000040u;
  return day60_click_order_cross_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_day60_click_order_cross(
    std::string* day60_click_order_cross) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (day60_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  day60_click_order_cross_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      day60_click_order_cross, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.day60_click_order_cross)
}

// optional string day30_click_order_cross = 8;
inline bool OrderInfoFeature::_internal_has_day30_click_order_cross() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_day30_click_order_cross() const {
  return _internal_has_day30_click_order_cross();
}
inline void OrderInfoFeature::clear_day30_click_order_cross() {
  day30_click_order_cross_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& OrderInfoFeature::day30_click_order_cross() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.day30_click_order_cross)
  return _internal_day30_click_order_cross();
}
inline void OrderInfoFeature::set_day30_click_order_cross(const std::string& value) {
  _internal_set_day30_click_order_cross(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.day30_click_order_cross)
}
inline std::string* OrderInfoFeature::mutable_day30_click_order_cross() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.day30_click_order_cross)
  return _internal_mutable_day30_click_order_cross();
}
inline const std::string& OrderInfoFeature::_internal_day30_click_order_cross() const {
  return day30_click_order_cross_.Get();
}
inline void OrderInfoFeature::_internal_set_day30_click_order_cross(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  day30_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_day30_click_order_cross(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  day30_click_order_cross_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.day30_click_order_cross)
}
inline void OrderInfoFeature::set_day30_click_order_cross(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  day30_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.day30_click_order_cross)
}
inline void OrderInfoFeature::set_day30_click_order_cross(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000080u;
  day30_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.day30_click_order_cross)
}
inline std::string* OrderInfoFeature::_internal_mutable_day30_click_order_cross() {
  _has_bits_[0] |= 0x00000080u;
  return day30_click_order_cross_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_day30_click_order_cross() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.day30_click_order_cross)
  if (!_internal_has_day30_click_order_cross()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return day30_click_order_cross_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_day30_click_order_cross(std::string* day30_click_order_cross) {
  if (day30_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  day30_click_order_cross_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), day30_click_order_cross,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.day30_click_order_cross)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_day30_click_order_cross() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.day30_click_order_cross)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000080u;
  return day30_click_order_cross_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_day30_click_order_cross(
    std::string* day30_click_order_cross) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (day30_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  day30_click_order_cross_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      day30_click_order_cross, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.day30_click_order_cross)
}

// optional string day7_click_order_cross = 9;
inline bool OrderInfoFeature::_internal_has_day7_click_order_cross() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_day7_click_order_cross() const {
  return _internal_has_day7_click_order_cross();
}
inline void OrderInfoFeature::clear_day7_click_order_cross() {
  day7_click_order_cross_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& OrderInfoFeature::day7_click_order_cross() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.day7_click_order_cross)
  return _internal_day7_click_order_cross();
}
inline void OrderInfoFeature::set_day7_click_order_cross(const std::string& value) {
  _internal_set_day7_click_order_cross(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.day7_click_order_cross)
}
inline std::string* OrderInfoFeature::mutable_day7_click_order_cross() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.day7_click_order_cross)
  return _internal_mutable_day7_click_order_cross();
}
inline const std::string& OrderInfoFeature::_internal_day7_click_order_cross() const {
  return day7_click_order_cross_.Get();
}
inline void OrderInfoFeature::_internal_set_day7_click_order_cross(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  day7_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_day7_click_order_cross(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  day7_click_order_cross_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.day7_click_order_cross)
}
inline void OrderInfoFeature::set_day7_click_order_cross(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  day7_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.day7_click_order_cross)
}
inline void OrderInfoFeature::set_day7_click_order_cross(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000100u;
  day7_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.day7_click_order_cross)
}
inline std::string* OrderInfoFeature::_internal_mutable_day7_click_order_cross() {
  _has_bits_[0] |= 0x00000100u;
  return day7_click_order_cross_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_day7_click_order_cross() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.day7_click_order_cross)
  if (!_internal_has_day7_click_order_cross()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return day7_click_order_cross_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_day7_click_order_cross(std::string* day7_click_order_cross) {
  if (day7_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  day7_click_order_cross_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), day7_click_order_cross,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.day7_click_order_cross)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_day7_click_order_cross() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.day7_click_order_cross)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000100u;
  return day7_click_order_cross_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_day7_click_order_cross(
    std::string* day7_click_order_cross) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (day7_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  day7_click_order_cross_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      day7_click_order_cross, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.day7_click_order_cross)
}

// optional string day1_click_order_cross = 10;
inline bool OrderInfoFeature::_internal_has_day1_click_order_cross() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool OrderInfoFeature::has_day1_click_order_cross() const {
  return _internal_has_day1_click_order_cross();
}
inline void OrderInfoFeature::clear_day1_click_order_cross() {
  day1_click_order_cross_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& OrderInfoFeature::day1_click_order_cross() const {
  // @@protoc_insertion_point(field_get:orderfeature.OrderInfoFeature.day1_click_order_cross)
  return _internal_day1_click_order_cross();
}
inline void OrderInfoFeature::set_day1_click_order_cross(const std::string& value) {
  _internal_set_day1_click_order_cross(value);
  // @@protoc_insertion_point(field_set:orderfeature.OrderInfoFeature.day1_click_order_cross)
}
inline std::string* OrderInfoFeature::mutable_day1_click_order_cross() {
  // @@protoc_insertion_point(field_mutable:orderfeature.OrderInfoFeature.day1_click_order_cross)
  return _internal_mutable_day1_click_order_cross();
}
inline const std::string& OrderInfoFeature::_internal_day1_click_order_cross() const {
  return day1_click_order_cross_.Get();
}
inline void OrderInfoFeature::_internal_set_day1_click_order_cross(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  day1_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderInfoFeature::set_day1_click_order_cross(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  day1_click_order_cross_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:orderfeature.OrderInfoFeature.day1_click_order_cross)
}
inline void OrderInfoFeature::set_day1_click_order_cross(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  day1_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:orderfeature.OrderInfoFeature.day1_click_order_cross)
}
inline void OrderInfoFeature::set_day1_click_order_cross(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000200u;
  day1_click_order_cross_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:orderfeature.OrderInfoFeature.day1_click_order_cross)
}
inline std::string* OrderInfoFeature::_internal_mutable_day1_click_order_cross() {
  _has_bits_[0] |= 0x00000200u;
  return day1_click_order_cross_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderInfoFeature::release_day1_click_order_cross() {
  // @@protoc_insertion_point(field_release:orderfeature.OrderInfoFeature.day1_click_order_cross)
  if (!_internal_has_day1_click_order_cross()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return day1_click_order_cross_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderInfoFeature::set_allocated_day1_click_order_cross(std::string* day1_click_order_cross) {
  if (day1_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  day1_click_order_cross_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), day1_click_order_cross,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:orderfeature.OrderInfoFeature.day1_click_order_cross)
}
inline std::string* OrderInfoFeature::unsafe_arena_release_day1_click_order_cross() {
  // @@protoc_insertion_point(field_unsafe_arena_release:orderfeature.OrderInfoFeature.day1_click_order_cross)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000200u;
  return day1_click_order_cross_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderInfoFeature::unsafe_arena_set_allocated_day1_click_order_cross(
    std::string* day1_click_order_cross) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (day1_click_order_cross != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  day1_click_order_cross_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      day1_click_order_cross, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:orderfeature.OrderInfoFeature.day1_click_order_cross)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace orderfeature

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_orderfeature_2eproto
